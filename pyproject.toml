[build-system]
requires = [
    "scikit-build-core >=0.9.3",
    "nanobind >=1.9.2",
    "numpy;python_version >= '3.9' and platform_python_implementation == 'PyPy'",
    "oldest-supported-numpy;python_version < '3.9' or platform_python_implementation != 'PyPy'",
]
build-backend = "scikit_build_core.build"

[project]
name = "pyopencl"
version = "2024.2.7"
description = "Python wrapper for OpenCL"
readme = "README.rst"
requires-python = "~=3.8"
authors = [
    { name = "Andreas Kloeckner", email = "inform@tiker.net" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Other Audience",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: C++",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
]
dependencies = [
    "importlib-resources; python_version<'3.9'",
    "numpy",
    "platformdirs>=2.2.0",
    "pytools>=2024.1.5",
]

[project.optional-dependencies]
oclgrind = [
    "oclgrind_binary_distribution>=18.3",
]
pocl = [
    "pocl_binary_distribution>=1.2",
]
test = [
    "Mako",
    "pytest>=7.0.0",
]

[project.urls]
Homepage = "https://mathema.tician.de/software/pyopencl"
Documentation = "https://documen.tician.de/pyopencl"
Repository = "https://github.com/inducer/pyopencl"

[tool.cibuildwheel]
test-command = "pytest {project}/test"
test-extras = ["test"]

[tool.cibuildwheel.linux]
skip = ["pp*", "cp36-*", "cp37-*", "*_i686"]
test-command = ""
before-all = [
    "yum install -y git openssl-devel ruby",
    "bash {package}/scripts/build-ocl.sh",
]
before-build = [
    "pip install numpy -Csetup-args=-Dallow-noblas=true",
]
repair-wheel-command = "auditwheel repair -w {dest_dir} --lib-sdir=/.libs {wheel}"

[[tool.cibuildwheel.overrides]]
select = "*-musllinux*"
before-all = [
    "apk add ruby git openssl-dev",
    "bash {package}/scripts/build-ocl.sh",
]
repair-wheel-command = "auditwheel repair -w {dest_dir} --lib-sdir=/.libs {wheel}"

[tool.cibuildwheel.macos]
skip = ["pp*", "cp36-*", "cp37-*"]
before-all = "bash {package}/scripts/build-ocl-macos.sh"
test-command = "pytest {project}/test/test_array.py" # same limitation as conda-forge
archs = "x86_64 arm64"

# https://github.com/conda-forge/pyopencl-feedstock/blob/6f3c5de59b18c9518abba3cb94f6ae92964553f8/recipe/meta.yaml#L62-L63

[tool.cibuildwheel.macos.environment]
# Needed for full C++17 support
MACOSX_DEPLOYMENT_TARGET = "10.14"

[tool.cibuildwheel.windows]
skip = ["*-win32", "pp*", "cp36-*", "cp37-*"]
test-command = ""
before-all = "bash {package}/scripts/build-ocl-windows.sh"

[tool.scikit-build]
sdist.exclude = [
    ".mypy_cache",
    ".ci",
    ".github",
    ".conda-ci-build-configure.sh",
    "doc/upload-docs.sh",
    ".editorconfig",
    "TODOs",
    "run-*.sh",
    "setup.cfg",
]
