Python 3 Intel CPU:
  script: |
    source /opt/enable-intel-cl.sh
    export PYOPENCL_TEST="intel(r):pu"
    export EXTRA_INSTALL="numpy mako"

    curl -L -O https://tiker.net/ci-support-v0
    . ci-support-v0
    build_py_project_in_venv
    test_py_project
  tags:
  - python3
  - intel-cl-cpu
  except:
  - tags
  artifacts:
    reports:
      junit: test/pytest.xml

Python 3 Nvidia Titan X:
  script: |
    export PYOPENCL_TEST=nvi:titan
    export EXTRA_INSTALL="numpy mako"

    curl -L -O https://tiker.net/ci-support-v0
    . ci-support-v0
    build_py_project_in_venv
    test_py_project
  tags:
  - python3
  - nvidia-titan-x
  except:
  - tags
  artifacts:
    reports:
      junit: test/pytest.xml

Python 3 Nvidia Titan V:
  script: |
    export PYOPENCL_TEST=nvi:titan
    export EXTRA_INSTALL="numpy mako"

    curl -L -O https://tiker.net/ci-support-v0
    . ci-support-v0
    build_py_project_in_venv
    test_py_project
  tags:
  - python3
  - nvidia-titan-v
  except:
  - tags
  artifacts:
    reports:
      junit: test/pytest.xml

Python 3 Nvidia K40:
  script: |
    export PYOPENCL_TEST=nvi:k40
    export EXTRA_INSTALL="numpy mako"

    curl -L -O https://tiker.net/ci-support-v0
    . ci-support-v0
    build_py_project_in_venv
    test_py_project
  tags:
  - python3
  - nvidia-k40
  except:
  - tags
  artifacts:
    reports:
      junit: test/pytest.xml

Python 3 POCL:
  script: |
    export PYOPENCL_TEST=portable:cpu
    export EXTRA_INSTALL="numpy mako"

    curl -L -O https://tiker.net/ci-support-v0
    . ci-support-v0
    build_py_project_in_venv
    test_py_project
  tags:
  - python3
  - pocl
  except:
  - tags
  artifacts:
    reports:
      junit: test/pytest.xml

Python 3 POCL CL 1.1:
  script: |
    export PYOPENCL_TEST=portable:cpu
    export EXTRA_INSTALL="numpy mako"
    export PYOPENCL_PRETEND_CL_VERSION='1.1'

    curl -L -O https://tiker.net/ci-support-v0
    . ci-support-v0
    build_py_project_in_venv
    test_py_project
  tags:
  - python3
  - pocl
  except:
  - tags
  artifacts:
    reports:
      junit: test/pytest.xml

Python 3 POCL K40:
  script: |
    export PYOPENCL_TEST=portable:k40
    export EXTRA_INSTALL="numpy mako"

    curl -L -O https://tiker.net/ci-support-v0
    . ci-support-v0
    build_py_project_in_venv
    test_py_project
  tags:
  - python3
  - pocl
  - nvidia-k40
  except:
  - tags
  artifacts:
    reports:
      junit: test/pytest.xml

Python 3 POCL Titan V:
  script: |
    export PYOPENCL_TEST=portable:titan
    export EXTRA_INSTALL="numpy mako"

    curl -L -O https://tiker.net/ci-support-v0
    . ci-support-v0
    build_py_project_in_venv
    test_py_project
  tags:
  - python3
  - pocl
  - nvidia-titan-v
  except:
  - tags
  artifacts:
    reports:
      junit: test/pytest.xml

Python 3 POCL (+GL and special functions):
  script: |
    export PYOPENCL_TEST=portable:cpu
    export EXTRA_INSTALL="numpy mako scipy pyfmmlib"
    export PYOPENCL_ENABLE_GL=ON

    curl -L -O https://tiker.net/ci-support-v0
    . ci-support-v0
    build_py_project_in_venv
    test_py_project
  tags:
  - python3
  - pocl
  except:
  - tags
  artifacts:
    reports:
      junit: test/pytest.xml

Flake8:
  script: |
    curl -L -O https://tiker.net/ci-support-v0
    . ci-support-v0
    build_py_project_in_venv
    install_and_run_flake8 "$(get_proj_name)" examples/*.py test/*.py
  tags:
  - python3
  except:
  - tags

Pylint:
  script: |
    export EXTRA_INSTALL="numpy mako matplotlib PyOpenGl IPython"

    curl -L -O https://tiker.net/ci-support-v0
    . ci-support-v0

    build_py_project_in_venv

    # Avoid linting local directory, where native module
    # cannot be imported.
    rm -Rf "$(get_proj_name)"

    run_pylint "$(get_proj_name)" test/*.py
  tags:
  - python3
  except:
  - tags

Mypy:
  script: |
    export EXTRA_INSTALL="numpy mako mypy importlib-resources"

    curl -L -O https://tiker.net/ci-support-v0
    . ci-support-v0
    build_py_project_in_venv
    python -m mypy --show-error-codes pyopencl test
  tags:
  - python3
  except:
  - tags

Documentation:
  script: |
    export EXTRA_INSTALL="numpy mako"

    curl -L -O https://tiker.net/ci-support-v0
    . ci-support-v0
    build_py_project_in_venv
    build_docs
    maybe_upload_docs
  tags:
  - linux

Examples:
  script: |
    export EXTRA_INSTALL="pillow cgen mako imageio"

    curl -L -O https://tiker.net/ci-support-v0
    . ci-support-v0
    build_py_project_in_venv
    (cd examples; rm -f gl_*)
    run_examples --no-require-main
  except:
  - tags
  tags:
  - python3
  - pocl

Downstream:
  parallel:
    matrix:
    - DOWNSTREAM_PROJECT: [loopy, boxtree, meshmode]
  tags:
  - large-node
  - "docker-runner"
  script: |
    curl -L -O https://tiker.net/ci-support-v0
    . ci-support-v0

    prepare_downstream_build "https://github.com/inducer/$DOWNSTREAM_PROJECT.git"
    sed -i 's/pyopencl/ocl-icd/' .test-conda-env-py3.yml
    build_py_project_in_conda_env
    test_py_project

# vim: sw=2
